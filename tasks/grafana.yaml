- name: Install grafana-operator.v3.10.1
  shell: |
    oc apply -f crd/grafana-operator.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"

- name: Wait for grafana-operator.v3.10.1 to Succeeded
  shell: |
    oc get csv grafana-operator.v3.10.1 -n assisted-installer -o custom-columns=Phase:.status.phase --no-headers=true
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  register: grafana_operator_phase
  until: "'Succeeded' in grafana_operator_phase.stdout"
  delay: 30
  retries: 10

- name: Install prometheus-prometheus-instance Pods
  shell: |
    oc apply -f crd/grafana-instance.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"

- name: Wait for prometheus-prometheus-instance-0 to Running
  shell: |
    oc describe pods -n assisted-installer grafana-deployment | grep ^Status: | head -1 | awk '{print $2}'
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  register: grafana_deployment_status
  until: "'Running' in grafana_deployment_status.stdout"
  delay: 30
  retries: 10

- name: Install grafana-data-source
  shell: |
    oc apply -f crd/grafana-data-source.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"

- name: Install grafana-route
  shell: |
    oc apply -f crd/grafana-route.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"

- name: Get for Grafana URL
  shell: |
    oc get route grafana-route -n assisted-installer -o custom-columns=Name:.spec.host --no-headers=true
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  register: grafana_route_url

- name: Print Grafana URL
  debug:
    msg: "Grafana URL is https://{{ grafana_route_url.stdout }}"

- name: Install qe-assisted-installer-grafana-dashboard
  shell: |
    oc apply -f crd/qe-assisted-installer-grafana-dashboard.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
